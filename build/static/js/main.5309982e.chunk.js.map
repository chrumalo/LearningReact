{"version":3,"sources":["components/HomePage.js","components/AboutPage.js","components/Header.js","api/apiUtils.js","api/courseApi.js","components/CourseList.js","components/CoursesPage.js","components/NotFoundPage.js","components/common/TextInput.js","components/CourseForm.js","components/ManageCoursePage.js","components/App.js","index.js"],"names":["HomePage","className","to","AboutPage","React","Component","Header","activeStyle","color","exact","handleResponse","response","a","ok","json","status","text","error","Error","handleError","console","baseUrl","process","REACT_APP_API_URL","CourseList","props","courses","map","course","key","id","slug","CoursesPage","useState","setCourses","useEffect","fetch","then","catch","_courses","NotFoundPage","TextInput","wrapperClass","length","htmlFor","label","type","onChange","name","value","defaultProps","CourseForm","onSubmit","title","errors","authorId","category","ManageCoursePage","setCourse","target","event","preventDefault","method","headers","body","JSON","stringify","parseInt","courseApi","history","push","App","path","component","from","render","document","getElementById"],"mappings":"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","file":"static/js/main.5309982e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <h1>Pluralsight Administration</h1>\r\n      <p>React, Flux, and Router for ultra-responsive web apps.</p>\r\n      <Link to=\"about\" className=\"btn btn-primary\">\r\n        About\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nclass AboutPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>About</h2>\r\n        <p>This app uses React.</p>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutPage;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  const activeStyle = { color: \"orange\" };\r\n  return (\r\n    <nav>\r\n      <NavLink activeStyle={activeStyle} exact to=\"/\">\r\n        Home\r\n      </NavLink>\r\n      {\" | \"}\r\n      <NavLink activeStyle={activeStyle} to=\"/courses\">\r\n        Courses\r\n      </NavLink>\r\n      {\" | \"}\r\n      <NavLink activeStyle={activeStyle} to=\"/about\">\r\n        About\r\n      </NavLink>\r\n      {\" | \"}\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export async function handleResponse(response) {\r\n  if (response.ok) return response.json();\r\n  if (response.status === 400) {\r\n    // So, a server-side validation error occurred.\r\n    // Server side validation returns a string error message, so parse as text instead of json.\r\n    const error = await response.text();\r\n    throw new Error(error);\r\n  }\r\n  throw new Error(\"Network response was not ok.\");\r\n}\r\n\r\n// In a real app, would likely call an error logging service.\r\nexport function handleError(error) {\r\n  // eslint-disable-next-line no-console\r\n  console.error(\"API call failed. \" + error);\r\n  throw error;\r\n}\r\n","import { handleResponse, handleError } from \"./apiUtils\";\r\nconst baseUrl = process.env.REACT_APP_API_URL + \"/courses/\";\r\n\r\nexport function getCourses() {\r\n  return fetch(baseUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function getCourseBySlug(slug) {\r\n  return fetch(baseUrl + \"?slug=\" + slug)\r\n    .then(response => {\r\n      if (!response.ok) throw new Error(\"Network response was not ok.\");\r\n      return response.json().then(courses => {\r\n        if (courses.length !== 1) throw new Error(\"Course not found: \" + slug);\r\n        return courses[0]; // should only find one course for a given slug, so return it.\r\n      });\r\n    })\r\n    .catch(handleError);\r\n}\r\n\r\nexport function saveCourse(course) {\r\n  return fetch(baseUrl + (course.id || \"\"), {\r\n    method: course.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      ...course,\r\n      // Parse authorId to a number (in case it was sent as a string).\r\n      authorId: parseInt(course.authorId, 10)\r\n    })\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function deleteCourse(courseId) {\r\n  return fetch(baseUrl + courseId, { method: \"DELETE\" })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CourseList(props) {\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Title</th>\r\n          <th>Author ID</th>\r\n          <th>Category</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.courses.map((course) => {\r\n          return (\r\n            <tr key={course.id}>\r\n              <td>\r\n                <Link to={\"/course/\" + course.slug}>course.title</Link>\r\n              </td>\r\n              <td>course.authorId</td>\r\n              <td>course.category</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nCourseList.propTypes = {\r\n  courses: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      authorId: PropTypes.number.isRequired,\r\n      category: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default CourseList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getCourses } from \"../api/courseApi\";\r\nimport CourseList from \"./CourseList\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction CoursesPage() {\r\n  const [courses, setCourses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getCourses().then((_courses) => setCourses(_courses));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2>Courses</h2>\r\n      <Link className=\"btn btn-primary\" to=\"/course\">\r\n        Add Course\r\n      </Link>\r\n      <CourseList courses={courses} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CoursesPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NotFoundPage() {\r\n  return (\r\n    <div>\r\n      <h2>Page Not Found</h2>\r\n      <p>\r\n        <Link to=\"/\">Back to Home</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFoundPage;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction TextInput(props) {\n  let wrapperClass = \"form-group\";\n  if (props.error.length > 0) {\n    wrapperClass += \" has-error\";\n  }\n\n  return (\n    <div className={wrapperClass}>\n      <label htmlFor={props.id}>{props.label}</label>\n      <div className=\"field\">\n        <input\n          id={props.id}\n          type=\"text\"\n          onChange={props.onChange}\n          name={props.name}\n          className=\"form-control\"\n          value={props.value}\n        />\n      </div>\n      {props.error && <div className=\"alert alert-danger\">{props.error}</div>}\n    </div>\n  );\n}\n\nTextInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  error: PropTypes.string\n};\n\nTextInput.defaultProps = {\n  error: \"\"\n};\n\nexport default TextInput;\n","import React from \"react\";\r\nimport TextInput from \"./common/TextInput\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction CourseForm(props) {\r\n  return (\r\n    <form onSubmit={props.onSubmit}>\r\n      <TextInput\r\n        id=\"title\"\r\n        label=\"Title\"\r\n        onChange={props.onChange}\r\n        name=\"title\"\r\n        value={props.course.title}\r\n        error={props.errors.title}\r\n      />\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"author\">Author</label>\r\n        <div className=\"field\">\r\n          <select\r\n            id=\"author\"\r\n            name=\"authorId\"\r\n            onChange={props.onChange}\r\n            value={props.course.authorId || \"\"}\r\n            className=\"form-control\"\r\n          >\r\n            <option value=\"\" />\r\n            <option value=\"1\">Cory House</option>\r\n            <option value=\"2\">Scott Allen</option>\r\n          </select>\r\n        </div>\r\n        {props.errors.authorId && (\r\n          <div className=\"alert alert-danger\">{props.errors.authorId}</div>\r\n        )}\r\n      </div>\r\n\r\n      <TextInput\r\n        id=\"category\"\r\n        label=\"Category\"\r\n        name=\"category\"\r\n        onChange={props.onChange}\r\n        value={props.course.category}\r\n        error={props.errors.category}\r\n      />\r\n\r\n      <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nCourseForm.propTypes = {\r\n  course: PropTypes.object.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CourseForm;\r\n","import React, { useState } from \"react\";\r\nimport CourseForm from \"./CourseForm\";\r\nimport * as courseApi from \"../api/courseApi\";\r\n\r\nconst ManageCoursePage = (props) => {\r\n  const [course, setCourse] = useState({\r\n    id: null,\r\n    slug: \"\",\r\n    title: \"\",\r\n    authorId: null,\r\n    category: \"\",\r\n  });\r\n\r\n  function handleChange({ target }) {\r\n    setCourse({\r\n      ...course,\r\n      [target.name]: target.value,\r\n    });\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    courseApi.saveCourse(course).then(() => {\r\n      props.history.push(\"/courses\")\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <h2>Manage Course</h2>\r\n      <CourseForm\r\n        course={course}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageCoursePage;\r\n","import React from \"react\";\r\nimport HomePage from \"./HomePage\";\r\nimport AboutPage from \"./AboutPage\";\r\nimport Header from \"./Header\";\r\nimport CoursesPage from \"./CoursesPage\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport NotFoundPage from \"./NotFoundPage\";\r\nimport ManageCoursePage from \"./ManageCoursePage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={HomePage} />\r\n        <Route path=\"/courses\" component={CoursesPage} />\r\n        <Route path=\"/about\" component={AboutPage} />\r\n        <Route path=\"/course/:slug\" component={ManageCoursePage} />\r\n        <Route path=\"/course\" component={ManageCoursePage} />\r\n        <Redirect from=\"/about-page\" to=\"about\" />\r\n        <Route component={NotFoundPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nrender(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}